--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_opa
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode6311w[2..0]	: WIRE;
	w_anode6324w[3..0]	: WIRE;
	w_anode6341w[3..0]	: WIRE;
	w_anode6351w[3..0]	: WIRE;
	w_anode6361w[3..0]	: WIRE;
	w_anode6371w[3..0]	: WIRE;
	w_anode6381w[3..0]	: WIRE;
	w_anode6391w[3..0]	: WIRE;
	w_anode6401w[3..0]	: WIRE;
	w_anode6413w[2..0]	: WIRE;
	w_anode6422w[3..0]	: WIRE;
	w_anode6433w[3..0]	: WIRE;
	w_anode6443w[3..0]	: WIRE;
	w_anode6453w[3..0]	: WIRE;
	w_anode6463w[3..0]	: WIRE;
	w_anode6473w[3..0]	: WIRE;
	w_anode6483w[3..0]	: WIRE;
	w_anode6493w[3..0]	: WIRE;
	w_anode6504w[2..0]	: WIRE;
	w_anode6513w[3..0]	: WIRE;
	w_anode6524w[3..0]	: WIRE;
	w_anode6534w[3..0]	: WIRE;
	w_anode6544w[3..0]	: WIRE;
	w_anode6554w[3..0]	: WIRE;
	w_anode6564w[3..0]	: WIRE;
	w_anode6574w[3..0]	: WIRE;
	w_anode6584w[3..0]	: WIRE;
	w_anode6595w[2..0]	: WIRE;
	w_anode6604w[3..0]	: WIRE;
	w_anode6615w[3..0]	: WIRE;
	w_anode6625w[3..0]	: WIRE;
	w_anode6635w[3..0]	: WIRE;
	w_anode6645w[3..0]	: WIRE;
	w_anode6655w[3..0]	: WIRE;
	w_anode6665w[3..0]	: WIRE;
	w_anode6675w[3..0]	: WIRE;
	w_data6309w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode6675w[3..3], w_anode6665w[3..3], w_anode6655w[3..3], w_anode6645w[3..3], w_anode6635w[3..3], w_anode6625w[3..3], w_anode6615w[3..3], w_anode6604w[3..3]), ( w_anode6584w[3..3], w_anode6574w[3..3], w_anode6564w[3..3], w_anode6554w[3..3], w_anode6544w[3..3], w_anode6534w[3..3], w_anode6524w[3..3], w_anode6513w[3..3]), ( w_anode6493w[3..3], w_anode6483w[3..3], w_anode6473w[3..3], w_anode6463w[3..3], w_anode6453w[3..3], w_anode6443w[3..3], w_anode6433w[3..3], w_anode6422w[3..3]), ( w_anode6401w[3..3], w_anode6391w[3..3], w_anode6381w[3..3], w_anode6371w[3..3], w_anode6361w[3..3], w_anode6351w[3..3], w_anode6341w[3..3], w_anode6324w[3..3]));
	w_anode6311w[] = ( (w_anode6311w[1..1] & (! data_wire[4..4])), (w_anode6311w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode6324w[] = ( (w_anode6324w[2..2] & (! w_data6309w[2..2])), (w_anode6324w[1..1] & (! w_data6309w[1..1])), (w_anode6324w[0..0] & (! w_data6309w[0..0])), w_anode6311w[2..2]);
	w_anode6341w[] = ( (w_anode6341w[2..2] & (! w_data6309w[2..2])), (w_anode6341w[1..1] & (! w_data6309w[1..1])), (w_anode6341w[0..0] & w_data6309w[0..0]), w_anode6311w[2..2]);
	w_anode6351w[] = ( (w_anode6351w[2..2] & (! w_data6309w[2..2])), (w_anode6351w[1..1] & w_data6309w[1..1]), (w_anode6351w[0..0] & (! w_data6309w[0..0])), w_anode6311w[2..2]);
	w_anode6361w[] = ( (w_anode6361w[2..2] & (! w_data6309w[2..2])), (w_anode6361w[1..1] & w_data6309w[1..1]), (w_anode6361w[0..0] & w_data6309w[0..0]), w_anode6311w[2..2]);
	w_anode6371w[] = ( (w_anode6371w[2..2] & w_data6309w[2..2]), (w_anode6371w[1..1] & (! w_data6309w[1..1])), (w_anode6371w[0..0] & (! w_data6309w[0..0])), w_anode6311w[2..2]);
	w_anode6381w[] = ( (w_anode6381w[2..2] & w_data6309w[2..2]), (w_anode6381w[1..1] & (! w_data6309w[1..1])), (w_anode6381w[0..0] & w_data6309w[0..0]), w_anode6311w[2..2]);
	w_anode6391w[] = ( (w_anode6391w[2..2] & w_data6309w[2..2]), (w_anode6391w[1..1] & w_data6309w[1..1]), (w_anode6391w[0..0] & (! w_data6309w[0..0])), w_anode6311w[2..2]);
	w_anode6401w[] = ( (w_anode6401w[2..2] & w_data6309w[2..2]), (w_anode6401w[1..1] & w_data6309w[1..1]), (w_anode6401w[0..0] & w_data6309w[0..0]), w_anode6311w[2..2]);
	w_anode6413w[] = ( (w_anode6413w[1..1] & (! data_wire[4..4])), (w_anode6413w[0..0] & data_wire[3..3]), enable_wire);
	w_anode6422w[] = ( (w_anode6422w[2..2] & (! w_data6309w[2..2])), (w_anode6422w[1..1] & (! w_data6309w[1..1])), (w_anode6422w[0..0] & (! w_data6309w[0..0])), w_anode6413w[2..2]);
	w_anode6433w[] = ( (w_anode6433w[2..2] & (! w_data6309w[2..2])), (w_anode6433w[1..1] & (! w_data6309w[1..1])), (w_anode6433w[0..0] & w_data6309w[0..0]), w_anode6413w[2..2]);
	w_anode6443w[] = ( (w_anode6443w[2..2] & (! w_data6309w[2..2])), (w_anode6443w[1..1] & w_data6309w[1..1]), (w_anode6443w[0..0] & (! w_data6309w[0..0])), w_anode6413w[2..2]);
	w_anode6453w[] = ( (w_anode6453w[2..2] & (! w_data6309w[2..2])), (w_anode6453w[1..1] & w_data6309w[1..1]), (w_anode6453w[0..0] & w_data6309w[0..0]), w_anode6413w[2..2]);
	w_anode6463w[] = ( (w_anode6463w[2..2] & w_data6309w[2..2]), (w_anode6463w[1..1] & (! w_data6309w[1..1])), (w_anode6463w[0..0] & (! w_data6309w[0..0])), w_anode6413w[2..2]);
	w_anode6473w[] = ( (w_anode6473w[2..2] & w_data6309w[2..2]), (w_anode6473w[1..1] & (! w_data6309w[1..1])), (w_anode6473w[0..0] & w_data6309w[0..0]), w_anode6413w[2..2]);
	w_anode6483w[] = ( (w_anode6483w[2..2] & w_data6309w[2..2]), (w_anode6483w[1..1] & w_data6309w[1..1]), (w_anode6483w[0..0] & (! w_data6309w[0..0])), w_anode6413w[2..2]);
	w_anode6493w[] = ( (w_anode6493w[2..2] & w_data6309w[2..2]), (w_anode6493w[1..1] & w_data6309w[1..1]), (w_anode6493w[0..0] & w_data6309w[0..0]), w_anode6413w[2..2]);
	w_anode6504w[] = ( (w_anode6504w[1..1] & data_wire[4..4]), (w_anode6504w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode6513w[] = ( (w_anode6513w[2..2] & (! w_data6309w[2..2])), (w_anode6513w[1..1] & (! w_data6309w[1..1])), (w_anode6513w[0..0] & (! w_data6309w[0..0])), w_anode6504w[2..2]);
	w_anode6524w[] = ( (w_anode6524w[2..2] & (! w_data6309w[2..2])), (w_anode6524w[1..1] & (! w_data6309w[1..1])), (w_anode6524w[0..0] & w_data6309w[0..0]), w_anode6504w[2..2]);
	w_anode6534w[] = ( (w_anode6534w[2..2] & (! w_data6309w[2..2])), (w_anode6534w[1..1] & w_data6309w[1..1]), (w_anode6534w[0..0] & (! w_data6309w[0..0])), w_anode6504w[2..2]);
	w_anode6544w[] = ( (w_anode6544w[2..2] & (! w_data6309w[2..2])), (w_anode6544w[1..1] & w_data6309w[1..1]), (w_anode6544w[0..0] & w_data6309w[0..0]), w_anode6504w[2..2]);
	w_anode6554w[] = ( (w_anode6554w[2..2] & w_data6309w[2..2]), (w_anode6554w[1..1] & (! w_data6309w[1..1])), (w_anode6554w[0..0] & (! w_data6309w[0..0])), w_anode6504w[2..2]);
	w_anode6564w[] = ( (w_anode6564w[2..2] & w_data6309w[2..2]), (w_anode6564w[1..1] & (! w_data6309w[1..1])), (w_anode6564w[0..0] & w_data6309w[0..0]), w_anode6504w[2..2]);
	w_anode6574w[] = ( (w_anode6574w[2..2] & w_data6309w[2..2]), (w_anode6574w[1..1] & w_data6309w[1..1]), (w_anode6574w[0..0] & (! w_data6309w[0..0])), w_anode6504w[2..2]);
	w_anode6584w[] = ( (w_anode6584w[2..2] & w_data6309w[2..2]), (w_anode6584w[1..1] & w_data6309w[1..1]), (w_anode6584w[0..0] & w_data6309w[0..0]), w_anode6504w[2..2]);
	w_anode6595w[] = ( (w_anode6595w[1..1] & data_wire[4..4]), (w_anode6595w[0..0] & data_wire[3..3]), enable_wire);
	w_anode6604w[] = ( (w_anode6604w[2..2] & (! w_data6309w[2..2])), (w_anode6604w[1..1] & (! w_data6309w[1..1])), (w_anode6604w[0..0] & (! w_data6309w[0..0])), w_anode6595w[2..2]);
	w_anode6615w[] = ( (w_anode6615w[2..2] & (! w_data6309w[2..2])), (w_anode6615w[1..1] & (! w_data6309w[1..1])), (w_anode6615w[0..0] & w_data6309w[0..0]), w_anode6595w[2..2]);
	w_anode6625w[] = ( (w_anode6625w[2..2] & (! w_data6309w[2..2])), (w_anode6625w[1..1] & w_data6309w[1..1]), (w_anode6625w[0..0] & (! w_data6309w[0..0])), w_anode6595w[2..2]);
	w_anode6635w[] = ( (w_anode6635w[2..2] & (! w_data6309w[2..2])), (w_anode6635w[1..1] & w_data6309w[1..1]), (w_anode6635w[0..0] & w_data6309w[0..0]), w_anode6595w[2..2]);
	w_anode6645w[] = ( (w_anode6645w[2..2] & w_data6309w[2..2]), (w_anode6645w[1..1] & (! w_data6309w[1..1])), (w_anode6645w[0..0] & (! w_data6309w[0..0])), w_anode6595w[2..2]);
	w_anode6655w[] = ( (w_anode6655w[2..2] & w_data6309w[2..2]), (w_anode6655w[1..1] & (! w_data6309w[1..1])), (w_anode6655w[0..0] & w_data6309w[0..0]), w_anode6595w[2..2]);
	w_anode6665w[] = ( (w_anode6665w[2..2] & w_data6309w[2..2]), (w_anode6665w[1..1] & w_data6309w[1..1]), (w_anode6665w[0..0] & (! w_data6309w[0..0])), w_anode6595w[2..2]);
	w_anode6675w[] = ( (w_anode6675w[2..2] & w_data6309w[2..2]), (w_anode6675w[1..1] & w_data6309w[1..1]), (w_anode6675w[0..0] & w_data6309w[0..0]), w_anode6595w[2..2]);
	w_data6309w[2..0] = data_wire[2..0];
END;
--VALID FILE
